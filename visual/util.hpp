#pragma once

#include "framework.hpp"

namespace autodis::visual
{
	//---------------------------------------------------------------------------------------------------------
	template <typename type>
	struct point_2d
	{
		type x_{0};				
		type y_{0};				
	};
	//---------------------------------------------------------------------------------------------------------
	using color_t = std::array<float, 3>;
	//---------------------------------------------------------------------------------------------------------
	struct mouse
	{
		bool			active_{false};
		point_2d<int>	start_point_;
		point_2d<int>	current_point_;
	};
	//---------------------------------------------------------------------------------------------------------
	void throw_on_fail(GLenum err);
	//---------------------------------------------------------------------------------------------------------
// DEBUG
	void _dump_df(shared::data::frame const& df);
//~DEBUG
}